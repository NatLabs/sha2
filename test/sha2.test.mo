// @testmode wasi

import Blob "mo:base/Blob";
import Array "mo:base/Array";
import { range } "mo:base/Iter";
import Sha256 "../src/Sha256";
import Sha512 "../src/Sha512";

// empty string

let b = Blob.fromArray([] : [Nat8]);
// sha256
do {
  let h = Blob.fromArray([227, 176, 196, 66, 152, 252, 28, 20, 154, 251, 244, 200, 153, 111, 185, 36, 39, 174, 65, 228, 100, 155, 147, 76, 164, 149, 153, 27, 120, 82, 184, 85]);
  assert(Sha256.fromBlob(#sha256,b) == h);
};

// sha224
do {
  let h = Blob.fromArray([209, 74, 2, 140, 42, 58, 43, 201, 71, 97, 2, 187, 40, 130, 52, 196, 21, 162, 176, 31, 130, 142, 166, 42, 197, 179, 228, 47]);
  assert(Sha256.fromBlob(#sha224,b) == h);
};

// sha512
do {
  let h = Blob.fromArray([207, 131, 225, 53, 126, 239, 184, 189, 241, 84, 40, 80, 214, 109, 128, 7, 214, 32, 228, 5, 11, 87, 21, 220, 131, 244, 169, 33, 211, 108, 233, 206, 71, 208, 209, 60, 93, 133, 242, 176, 255, 131, 24, 210, 135, 126, 236, 47, 99, 185, 49, 189, 71, 65, 122, 129, 165, 56, 50, 122, 249, 39, 218, 62]);
  assert(Sha512.fromBlob(#sha512,b) == h);
};

// sha512-224
do {
  let h = Blob.fromArray([110, 208, 221, 2, 128, 111, 168, 158, 37, 222, 6, 12, 25, 211, 172, 134, 202, 187, 135, 214, 160, 221, 208, 92, 51, 59, 132, 244]);
  assert(Sha512.fromBlob(#sha512_224,b) == h);
};

// sha512-256
do {
  let h = Blob.fromArray([198, 114, 184, 209, 239, 86, 237, 40, 171, 135, 195, 98, 44, 81, 20, 6, 155, 221, 58, 215, 184, 249, 115, 116, 152, 208, 192, 30, 206, 240, 150, 122]);
  assert(Sha512.fromBlob(#sha512_256,b) == h);
};

// sha384
do {
  let h = Blob.fromArray([56, 176, 96, 167, 81, 172, 150, 56, 76, 217, 50, 126, 177, 177, 227, 106, 33, 253, 183, 17, 20, 190, 7, 67, 76, 12, 199, 191, 99, 246, 225, 218, 39, 78, 222, 191, 231, 111, 101, 251, 213, 26, 210, 241, 72, 152, 185, 91]);
  assert(Sha512.fromBlob(#sha384,b) == h);
};

// padding test
// the test vectors were created with this python code:
//   import hashlib
//   [[x for x in hashlib.sha256(n*b'\xa5').digest()] for n in range(65)]
let digests : [[Nat8]] = [ 
  [227, 176, 196, 66, 152, 252, 28, 20, 154, 251, 244, 200, 153, 111, 185, 36, 39, 174, 65, 228, 100, 155, 147, 76, 164, 149, 153, 27, 120, 82, 184, 85],
  [105, 34, 233, 62, 56, 39, 100, 44, 228, 184, 131, 199, 86, 179, 26, 191, 128, 3, 102, 73, 211, 97, 75, 245, 252, 179, 173, 218, 67, 184, 234, 50],
  [121, 238, 37, 2, 25, 201, 83, 194, 242, 65, 14, 122, 225, 19, 202, 172, 57, 89, 107, 247, 118, 224, 11, 183, 228, 211, 78, 43, 79, 70, 220, 21],
  [15, 15, 122, 111, 252, 244, 171, 182, 202, 158, 157, 30, 107, 196, 109, 29, 67, 247, 215, 48, 186, 249, 61, 218, 205, 40, 182, 34, 85, 196, 63, 75],
  [229, 18, 69, 200, 65, 141, 211, 243, 98, 157, 163, 0, 29, 223, 237, 83, 13, 199, 181, 216, 92, 116, 236, 196, 172, 245, 7, 224, 115, 147, 132, 34],
  [33, 32, 172, 10, 135, 62, 167, 8, 234, 208, 214, 209, 254, 202, 1, 110, 202, 202, 56, 167, 198, 27, 54, 135, 64, 220, 139, 121, 98, 202, 15, 53],
  [61, 91, 32, 255, 254, 103, 188, 245, 121, 140, 178, 76, 19, 12, 159, 128, 73, 207, 180, 139, 209, 149, 78, 183, 97, 234, 149, 28, 143, 60, 216, 129],
  [142, 103, 121, 220, 103, 83, 17, 82, 101, 156, 35, 37, 102, 102, 65, 133, 191, 193, 180, 200, 239, 68, 89, 4, 70, 9, 88, 60, 147, 39, 228, 4],
  [237, 11, 77, 209, 88, 164, 109, 196, 36, 166, 96, 192, 233, 170, 165, 37, 88, 64, 108, 183, 193, 6, 57, 24, 151, 187, 7, 253, 141, 195, 186, 153],
  [174, 140, 236, 44, 36, 165, 54, 224, 220, 210, 26, 89, 4, 5, 120, 252, 137, 130, 29, 5, 219, 133, 99, 73, 167, 55, 59, 195, 30, 74, 111, 18],
  [17, 51, 177, 70, 150, 175, 46, 184, 107, 3, 75, 236, 69, 130, 72, 10, 43, 158, 119, 75, 144, 118, 108, 171, 109, 17, 90, 117, 241, 110, 33, 222],
  [131, 176, 67, 192, 4, 79, 82, 87, 113, 236, 37, 111, 21, 86, 101, 90, 107, 22, 69, 147, 131, 127, 224, 40, 131, 79, 200, 157, 80, 65, 36, 95],
  [27, 191, 205, 180, 143, 142, 201, 219, 44, 103, 54, 9, 35, 146, 65, 230, 185, 8, 19, 239, 49, 174, 6, 224, 135, 65, 97, 199, 31, 89, 96, 105],
  [254, 0, 220, 87, 173, 179, 52, 102, 133, 233, 159, 37, 81, 139, 173, 122, 229, 37, 128, 233, 207, 65, 244, 48, 213, 179, 134, 119, 153, 130, 88, 164],
  [238, 202, 246, 243, 180, 73, 227, 180, 80, 152, 94, 108, 92, 139, 176, 130, 221, 76, 108, 253, 91, 57, 180, 46, 252, 74, 89, 198, 138, 159, 148, 187],
  [52, 208, 189, 247, 47, 203, 49, 180, 251, 40, 88, 77, 35, 174, 23, 102, 160, 141, 150, 44, 3, 150, 165, 154, 224, 3, 113, 248, 179, 90, 245, 7],
  [87, 245, 46, 138, 12, 84, 167, 240, 131, 80, 198, 2, 250, 104, 82, 255, 89, 228, 226, 70, 251, 227, 138, 163, 105, 189, 215, 183, 232, 158, 1, 63],
  [28, 106, 149, 84, 184, 243, 232, 208, 184, 150, 90, 86, 119, 28, 237, 78, 104, 71, 74, 247, 198, 203, 132, 230, 157, 55, 62, 92, 45, 85, 37, 212],
  [43, 152, 128, 104, 231, 120, 249, 218, 87, 155, 86, 159, 12, 189, 214, 119, 240, 133, 159, 77, 129, 243, 203, 112, 133, 223, 167, 186, 179, 138, 130, 55],
  [135, 237, 241, 233, 232, 27, 9, 254, 201, 244, 251, 119, 104, 253, 121, 122, 153, 68, 89, 217, 214, 82, 141, 23, 200, 18, 86, 204, 66, 205, 4, 107],
  [35, 119, 178, 141, 210, 226, 151, 255, 51, 104, 252, 139, 36, 50, 21, 70, 187, 132, 146, 81, 153, 249, 111, 25, 184, 183, 94, 24, 24, 86, 84, 58],
  [24, 240, 24, 244, 92, 252, 72, 89, 241, 39, 201, 245, 163, 136, 52, 49, 45, 202, 235, 176, 89, 21, 241, 64, 108, 104, 219, 105, 146, 44, 247, 182],
  [122, 79, 174, 105, 109, 33, 210, 47, 23, 58, 32, 113, 38, 125, 41, 110, 49, 223, 226, 22, 127, 19, 86, 57, 146, 185, 74, 199, 144, 213, 199, 101],
  [61, 71, 130, 218, 141, 77, 117, 15, 79, 70, 134, 3, 218, 65, 46, 203, 5, 5, 212, 189, 102, 145, 132, 7, 74, 133, 121, 84, 15, 121, 131, 24],
  [19, 172, 241, 246, 118, 64, 203, 102, 254, 188, 87, 236, 5, 253, 181, 16, 44, 39, 182, 4, 83, 253, 207, 175, 53, 125, 223, 241, 242, 36, 208, 88],
  [31, 121, 1, 26, 78, 250, 52, 5, 179, 255, 240, 120, 15, 23, 227, 72, 89, 59, 177, 204, 51, 134, 133, 156, 116, 66, 230, 161, 123, 98, 44, 236],
  [8, 114, 161, 238, 201, 59, 33, 106, 45, 15, 182, 55, 5, 190, 217, 38, 114, 147, 124, 171, 219, 243, 114, 228, 246, 136, 137, 79, 169, 190, 103, 12],
  [245, 51, 238, 198, 151, 37, 247, 53, 182, 33, 202, 36, 103, 87, 154, 190, 111, 216, 77, 238, 31, 205, 153, 132, 187, 217, 92, 4, 254, 119, 42, 97],
  [228, 63, 100, 254, 39, 207, 69, 134, 126, 103, 139, 146, 202, 181, 38, 79, 35, 231, 104, 226, 240, 44, 186, 251, 92, 4, 101, 17, 149, 135, 161, 165],
  [178, 74, 101, 228, 244, 72, 94, 26, 108, 126, 84, 169, 247, 31, 58, 147, 19, 93, 108, 240, 13, 218, 11, 42, 51, 9, 81, 213, 22, 144, 124, 233],
  [63, 96, 47, 13, 68, 194, 96, 87, 56, 117, 150, 227, 121, 58, 121, 201, 44, 242, 207, 55, 34, 184, 67, 247, 250, 48, 189, 64, 249, 191, 15, 180],
  [196, 193, 25, 197, 114, 46, 47, 201, 133, 206, 253, 94, 85, 231, 213, 162, 189, 12, 141, 108, 158, 13, 52, 100, 154, 98, 68, 225, 129, 252, 77, 4],
  [252, 139, 100, 0, 28, 95, 221, 15, 47, 64, 251, 103, 218, 228, 168, 101, 162, 197, 189, 23, 131, 102, 118, 214, 213, 181, 139, 121, 23, 227, 55, 23],
  [50, 94, 129, 66, 208, 202, 211, 112, 25, 96, 62, 239, 219, 225, 105, 37, 168, 105, 217, 192, 29, 199, 71, 25, 5, 46, 45, 238, 243, 25, 164, 47],
  [79, 135, 72, 50, 56, 65, 65, 238, 77, 125, 23, 197, 231, 10, 137, 207, 32, 181, 43, 35, 245, 155, 129, 233, 214, 192, 115, 125, 208, 52, 212, 158],
  [219, 27, 126, 100, 132, 44, 232, 91, 112, 84, 26, 241, 229, 137, 32, 73, 64, 101, 106, 82, 136, 5, 30, 224, 100, 216, 8, 116, 255, 248, 133, 222],
  [146, 225, 36, 252, 134, 0, 141, 171, 77, 34, 74, 99, 95, 148, 181, 121, 173, 153, 46, 187, 62, 144, 141, 128, 55, 64, 11, 15, 221, 123, 1, 200],
  [35, 134, 234, 134, 40, 61, 54, 189, 111, 186, 12, 76, 48, 115, 187, 143, 206, 136, 19, 209, 65, 13, 169, 135, 45, 89, 248, 102, 200, 35, 167, 113],
  [125, 236, 32, 200, 58, 213, 195, 65, 93, 165, 223, 217, 203, 159, 227, 126, 15, 186, 214, 118, 173, 253, 95, 82, 4, 90, 111, 151, 45, 125, 23, 128],
  [171, 141, 42, 77, 0, 138, 83, 24, 112, 190, 101, 110, 253, 115, 245, 74, 211, 84, 81, 214, 14, 215, 245, 83, 246, 102, 231, 254, 67, 245, 35, 82],
  [79, 99, 57, 139, 104, 207, 208, 236, 254, 150, 150, 197, 156, 71, 87, 226, 91, 71, 30, 10, 20, 142, 97, 126, 78, 210, 4, 48, 147, 199, 132, 233],
  [237, 71, 99, 92, 197, 53, 250, 194, 208, 118, 161, 79, 76, 54, 8, 19, 238, 224, 165, 84, 159, 137, 167, 227, 81, 215, 202, 148, 138, 220, 203, 216],
  [206, 58, 159, 14, 193, 17, 36, 50, 178, 6, 167, 186, 187, 161, 119, 204, 124, 241, 187, 43, 124, 100, 132, 144, 83, 229, 205, 29, 87, 78, 255, 120],
  [153, 30, 115, 216, 65, 88, 8, 246, 119, 6, 125, 102, 73, 215, 80, 92, 92, 38, 246, 39, 46, 114, 109, 115, 53, 52, 189, 134, 157, 95, 241, 182],
  [145, 169, 50, 174, 187, 111, 185, 232, 108, 216, 145, 232, 233, 182, 130, 23, 245, 181, 105, 182, 101, 200, 147, 132, 26, 180, 249, 247, 244, 66, 242, 211],
  [210, 204, 237, 153, 29, 104, 65, 31, 51, 146, 72, 135, 111, 18, 42, 111, 142, 22, 49, 244, 190, 76, 154, 243, 28, 223, 60, 125, 61, 102, 16, 4],
  [230, 0, 206, 180, 114, 105, 65, 165, 103, 241, 112, 150, 145, 14, 121, 17, 219, 223, 193, 30, 183, 101, 21, 138, 217, 150, 214, 197, 71, 175, 234, 108],
  [236, 211, 150, 75, 241, 247, 157, 92, 202, 115, 149, 236, 172, 7, 100, 61, 60, 118, 236, 2, 69, 121, 203, 215, 202, 165, 251, 228, 22, 109, 6, 36],
  [42, 214, 70, 230, 16, 105, 235, 6, 231, 53, 209, 139, 3, 105, 230, 212, 246, 162, 193, 146, 25, 225, 132, 252, 116, 135, 213, 155, 131, 235, 224, 33],
  [54, 137, 15, 149, 142, 236, 119, 121, 221, 232, 133, 86, 130, 239, 92, 186, 26, 154, 118, 112, 124, 217, 80, 61, 46, 248, 133, 196, 93, 58, 245, 87],
  [75, 15, 96, 181, 5, 172, 40, 132, 208, 203, 93, 125, 221, 21, 188, 149, 28, 214, 198, 86, 171, 141, 118, 25, 248, 182, 156, 86, 37, 133, 253, 170],
  [128, 8, 193, 93, 114, 142, 21, 224, 227, 106, 89, 126, 160, 126, 172, 129, 135, 0, 180, 175, 138, 226, 133, 169, 57, 148, 35, 116, 28, 251, 120, 31],
  [135, 208, 93, 126, 107, 221, 157, 101, 181, 23, 59, 154, 145, 195, 116, 49, 34, 229, 16, 151, 200, 35, 6, 145, 68, 20, 27, 55, 8, 155, 178, 154],
  [1, 7, 248, 190, 242, 53, 12, 64, 94, 97, 137, 173, 102, 20, 104, 159, 131, 134, 73, 81, 236, 133, 166, 137, 44, 178, 212, 9, 15, 198, 219, 220],
  [56, 11, 171, 191, 28, 121, 208, 250, 127, 51, 82, 126, 65, 13, 206, 82, 87, 192, 8, 27, 145, 3, 118, 155, 24, 113, 125, 98, 101, 193, 143, 211],
  [38, 238, 1, 22, 119, 135, 64, 166, 111, 226, 186, 16, 234, 6, 55, 72, 178, 115, 6, 172, 201, 145, 136, 236, 129, 39, 70, 212, 232, 215, 0, 131],
  [76, 247, 30, 43, 10, 160, 252, 192, 194, 113, 246, 131, 83, 2, 106, 119, 184, 229, 1, 83, 99, 42, 142, 74, 115, 131, 60, 214, 64, 128, 233, 46],
  [41, 35, 93, 145, 46, 249, 179, 32, 148, 217, 244, 138, 7, 92, 18, 57, 111, 156, 42, 155, 31, 201, 215, 44, 34, 34, 84, 149, 158, 206, 180, 230],
  [143, 44, 89, 231, 20, 5, 235, 117, 183, 154, 101, 47, 164, 177, 39, 35, 247, 152, 225, 198, 48, 5, 206, 232, 218, 171, 232, 44, 209, 119, 202, 38],
  [153, 153, 67, 70, 34, 199, 73, 114, 166, 178, 246, 54, 107, 209, 70, 121, 86, 95, 222, 178, 67, 215, 168, 219, 14, 216, 206, 90, 49, 15, 165, 181],
  [170, 186, 213, 150, 217, 114, 123, 179, 200, 231, 110, 73, 64, 154, 243, 43, 68, 87, 119, 67, 50, 185, 100, 203, 253, 230, 131, 183, 94, 83, 51, 96],
  [238, 20, 238, 34, 24, 212, 143, 225, 15, 124, 49, 76, 136, 93, 147, 167, 152, 45, 199, 37, 223, 21, 136, 64, 243, 69, 176, 87, 168, 69, 42, 140],
  [226, 44, 84, 64, 125, 203, 156, 114, 0, 218, 236, 66, 151, 165, 1, 73, 218, 143, 247, 44, 28, 106, 191, 244, 1, 26, 145, 75, 210, 131, 9, 176],
  [161, 148, 38, 99, 165, 184, 185, 61, 255, 201, 196, 255, 95, 98, 199, 26, 28, 2, 29, 31, 204, 30, 71, 13, 212, 97, 114, 171, 172, 225, 188, 165],
  [187, 98, 110, 85, 119, 2, 29, 249, 94, 161, 126, 182, 51, 158, 117, 144, 72, 85, 184, 0, 135, 228, 6, 96, 147, 28, 74, 137, 179, 2, 247, 74]
];

for (l in range(0,64)) {
  let b = Blob.fromArray(Array.tabulate<Nat8>(l,func(i){0xa5}));
  let h = Blob.fromArray(digests[l]); 
  assert(Sha256.fromBlob(#sha256, b) == h);
};

// string of 640,000 zero bytes
do {
  let data = Blob.fromArrayMut(Array.init<Nat8>(64, 0));
  let (digest256, digest512) = (
    Sha256.Digest(#sha256), Sha512.Digest(#sha512)
    );
  for (i in range(1,10000)) {
    digest256.writeBlob(data);
    digest512.writeBlob(data);
  };
  //assert(read256 == 10000 * 64);
  let h256 = Blob.fromArray([61, 0, 237, 134, 182, 99, 205, 27, 138, 200, 43, 16, 82, 87, 205, 16, 148, 18, 249, 45, 202, 68, 32, 72, 83, 36, 57, 249, 32, 167, 246, 69]);
  let h512 = Blob.fromArray([185, 210, 89, 99, 251, 49, 143, 153, 12, 142, 84, 169, 249, 148, 175, 61, 145, 199, 69, 11, 148, 254, 140, 119, 61, 28, 58, 131, 83, 32, 14, 171, 33, 173, 242, 36, 122, 71, 210, 182, 28, 141, 145, 66, 148, 64, 86, 232, 73, 25, 31, 130, 115, 13, 234, 231, 152, 183, 217, 138, 153, 112, 120, 205]);
  assert(digest256.sum() == h256);
  assert(digest512.sum() == h512);
};
